import json
import xml.etree.ElementTree as ET

class Cinema:
    def __init__(self, title, creator, release_year):
        self.title = title
        self.creator = creator
        self.release_year = release_year

    def display_info(self):
        print(f"Title: {self.title}")
        print(f"Creator: {self.creator}")
        print(f"Release Year: {self.release_year}")


class Film(Cinema):
    def __init__(self, title, creator, release_year):
        super().__init__(title, creator, release_year)
        

    def display_info(self):
        super().display_info()
        


class Series(Cinema):
    def __init__(self, title, creator, release_year, end_year):
        super().__init__(title, creator, release_year)
        self.end_year = end_year

    def display_info(self):
        super().display_info()
        print(f"End year: {self.end_year}")

# Пример использования классов:

film1 = Film("Интерстеллар", "Кристофер Нолан", 2014)
series1 = Series("Офис", "Стив Карелл", 2005, 2013)

print("Film:")
film1.display_info()

print("\nSeries:")
series1.display_info()

# Запись данных в формате JSON
film = [film1.to_dict()]
series = [series1.to_dict()]

with open("films.json", "w") as json_file:
    json.dump(films, json_file, indent=4)

with open("series.json", "w") as json_file:
    json.dump(series, json_file, indent=4)

# Запись данных в формате XML
films_root = ET.Element("films")
series_root = ET.Element("series")

for film in films:
    film_element = ET.SubElement(films_root, "film")
    for key, value in film.items():
        ET.SubElement(film_element, key).text = str(value)

for serie in series:
    serie_element = ET.SubElement(series_root, "serie")
    for key, value in serie.items():
        ET.SubElement(serie_element, key).text = str(value)

films_tree = ET.ElementTree(films_root)
series_tree = ET.ElementTree(series_root)

films_tree.write("films.xml")
series_tree.write("series.xml")
